generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Teacher {
  cin            String         @unique
  email          String         @unique
  name           String
  password       String
  phoneNumber    String?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  availabitilies Availability[]
  lessons        Lesson[]
  subjects       Subject[]
}

model Availability {
  id         String   @id @default(cuid())
  teacherCin String
  day        String
  startHour  String
  endHour    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  teacher    Teacher  @relation(fields: [teacherCin], references: [cin])
}

model Subject {
  id           String   @id @unique @default(cuid())
  name         String
  creditHours  Int
  pricePerHour Float
  studyPlan    String
  teacherCin   String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  groupeName   String?
  lesson       Lesson?
  group        Group?   @relation(fields: [groupeName], references: [name])
  teacher      Teacher?  @relation(fields: [teacherCin], references: [cin])
}

model Group {
  id        String    @id @default(cuid())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  lessons   Lesson[]
  students  Student[]
  subjects  Subject[]
}

model Student {
  cin         String   @unique
  name        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  email       String   @unique
  phoneNumber String   @unique
  groupName   String?
  group       Group?   @relation(fields: [groupName], references: [name])
}

model ClassRoom {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Lesson    Lesson?
}

model Lesson {
  groupId     String
  classRoomId String    @unique
  teacherCin  String
  subjectId   String    @unique
  day         String
  startHour   String
  endHour     String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  classRoom   ClassRoom @relation(fields: [classRoomId], references: [id])
  group       Group     @relation(fields: [groupId], references: [id])
  subject     Subject   @relation(fields: [subjectId], references: [id])
  teacher     Teacher   @relation(fields:  [teacherCin], references: [cin])
  @@unique([groupId, teacherCin, subjectId, classRoomId])
}
